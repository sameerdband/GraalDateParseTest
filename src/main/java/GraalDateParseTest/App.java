/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package GraalDateParseTest;

import java.io.IOException;

import com.oracle.truffle.js.lang.JavaScriptLanguage;
import com.oracle.truffle.js.runtime.JSContextOptions;

import org.graalvm.polyglot.Context;
import org.graalvm.polyglot.Source;
import org.graalvm.polyglot.Value;

public class App {
    public String runWorking(int i) throws IOException {
        String[] values = {"30354674", "2022-01-01T02:02:30Z", "12345678901234567890", "Something invalid"};
        if(i < values.length && i > -1) {
            String script = "Date.parse('" + values[i] + "')";
            return script + "=> " + runJS(script);
        }
        return "Invalid input";
    }

    public String runFailing() throws IOException {
        //292278996
        // Fails for all the values between these numbers (inclusive)
        //999999999
        
        String script = "Date.parse('292278996')";
        return script + " => " + runJS(script);
    }

    private String runJS(String script) throws IOException {
        Context jsContext = Context.newBuilder("js")
                .allowExperimentalOptions(true)
                .option(JSContextOptions.EXPERIMENTAL_FOREIGN_OBJECT_PROTOTYPE_NAME, "true")
                .option("engine.WarnInterpreterOnly", "false")
                .option("log.level", "OFF")
                .build();

        Source source = Source.newBuilder(JavaScriptLanguage.ID, script, null).cached(false).build();
        Value value = jsContext.eval(source);
        return value.toString();
    }

    public static void main(String[] args) {

        App app = new App();
        try {
            for(int i = 0; i < 4; i++) {
                System.out.println(app.runWorking(i));
            }

            System.out.println(app.runFailing());
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
}
